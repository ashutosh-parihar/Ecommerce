<section class="h-100 gradient-custom">
  <div class="container py-5">
    <div class="row d-flex justify-content-center my-4">
      <div class="col-md-8">
        <div class="card mb-4">
          <div class="card-header py-3">
            <h5 class="mb-0">Cart 1 - <%= @cart_items.sum(&:quantity) %> items</h5>
          </div>
          <div class="card-body">
            <% @cart_items.each do |cart_item| %>
              <% product = cart_item.product %>
              <div class="row cart-item" data-id="<%= cart_item.id %>">
                <div class="col-lg-3 col-md-12 mb-4 mb-lg-0">
                  <div class="bg-image hover-overlay hover-zoom ripple rounded" data-mdb-ripple-color="light">
                    <img src="<%= url_for(product.images.first) %>" class="w-100" alt="Product Image" />
                    <a href="#!">
                      <div class="mask" style="background-color: rgba(251, 251, 251, 0.2)"></div>
                    </a>
                  </div>
                </div>

                <div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
                  <p><strong><%= product.name %></strong></p>
                  <p>Actual Price: <%= product.actual_price %></p>
                  <p>Current Price: <%= product.current_price %></p>
                  <button type="button" class="btn btn-primary btn-sm me-1 mb-2 remove-item" data-mdb-toggle="tooltip" title="Remove item">
                    <i class="fas fa-trash"></i>
                  </button>
                  <button type="button" class="btn btn-danger btn-sm mb-2" data-mdb-toggle="tooltip" title="Move to the wish list">
                    <i class="fas fa-heart"></i>
                  </button>
                </div>

                <div class="col-lg-4 col-md-6 mb-4 mb-lg-0">
                  <div class="d-flex mb-4" style="max-width: 300px">
                    <button class="btn btn-primary px-3 me-2 update-quantity" data-increment="-1">
                      <i class="fas fa-minus"></i>
                    </button>
                    <div class="form-outline">
                      <input min="0" name="quantity" value="<%= cart_item.quantity %>" type="number" class="form-control" data-price="<%= product.current_price %>" />
                      <label class="form-label">Quantity</label>
                    </div>
                    <button class="btn btn-primary px-3 ms-2 update-quantity" data-increment="1">
                      <i class="fas fa-plus"></i>
                    </button>
                  </div>
                  <p class="text-start text-md-center">
                 <strong>₹<span class="product-total" data-price="<%= cart_item.price %>"><%= cart_item.price * cart_item.quantity %></span></strong></p>
                </div>
              </div>
            <% end %>
          </div>
        </div>
        <div class="card mb-4">
          <div class="card-body">
            <p><strong>Expected shipping delivery</strong></p>
            <p class="mb-0">12.10.2020 - 14.10.2020</p>
          </div>
        </div>
        <div class="card mb-4 mb-lg-0">
          <div class="card-body">
            <p><strong>We accept</strong></p>
          </div>
        </div>
      </div>
      <div class="col-md-4">
        <div class="card mb-4">
          <div class="card-header py-3">
            <h5 class="mb-0">Summary</h5>
          </div>
          <div class="card-body">
            <ul class="list-group list-group-flush">
              <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0">
                Products
                <span>₹<span id="total-amount"><%= @total_price %></span></span>
              </li>
              <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                Shipping
                <span>Gratis</span>
              </li>
              <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3">
                <div>
                  <strong>Total amount</strong>
                  <strong>
                    <p class="mb-0">(including VAT)</p>
                  </strong>
                </div>
                <span>₹<span id="total-amount-with-vat"><%= @total_price %></span></span>
              </li>
            </ul>

            <button type="button" class="btn btn-primary btn-lg btn-block">
              Go to checkout
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
 document.addEventListener("DOMContentLoaded", () => {
  const updateQuantityButtons = document.querySelectorAll(".update-quantity");
  const removeItemButtons = document.querySelectorAll(".remove-item");
  const productTotalElements = document.querySelectorAll(".product-total");
  const totalAmountElement = document.getElementById("total-amount");
  const totalAmountWithVatElement = document.getElementById("total-amount-with-vat");

  updateQuantityButtons.forEach(button => {
    button.addEventListener("click", () => {
      const increment = parseInt(button.dataset.increment);
      const input = button.parentNode.querySelector('input[type=number]');
      let quantity = parseInt(input.value) + increment;

      if (quantity < 0) {
        quantity = 0; // Ensure the quantity is not negative
      }

      input.value = quantity;
      const cartItemElement = button.closest(".cart-item");
      const cartItemId = cartItemElement.dataset.id;

      if (quantity === 0) {
        removeCartItem(cartItemId); // Remove item if quantity is zero
        cartItemElement.remove();
      } else {
        updateCartItemQuantity(cartItemId, quantity); // Update item quantity
      }

      updateProductTotal(button);
      updateTotal(productTotalElements, totalAmountElement, totalAmountWithVatElement);
    });
  });

  removeItemButtons.forEach(button => {
    button.addEventListener("click", () => {
      const cartItemElement = button.closest(".cart-item");
      const cartItemId = cartItemElement.dataset.id;
      removeCartItem(cartItemId);
      cartItemElement.remove();
      updateTotal(productTotalElements, totalAmountElement, totalAmountWithVatElement);
    });
  });
});

  function updateCartItemQuantity(cartItemId, quantity) {
    const url = `/customer/carts/${cartItemId}`;
    const token = document.querySelector('meta[name="csrf-token"]').content;

    fetch(url, {
      method: "PATCH",
      headers: {
        "Content-Type": "application/json",
        "X-CSRF-Token": token
      },
      body: JSON.stringify({ cart_item: { quantity: quantity } })
    })
      .then(response => response.json())
      .then(data => console.log(data))
      .catch(error => console.error(error));
  }

  function removeCartItem(cartItemId) {
    const url = `/customer/carts/${cartItemId}`;
    const token = document.querySelector('meta[name="csrf-token"]').content;

    fetch(url, {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json",
        "X-CSRF-Token": token
      }
    })
      .then(response => response.json())
      .then(data => console.log(data))
      .catch(error => console.error(error));
  }

  function updateProductTotal(button) {
    const quantityInput = button.parentNode.querySelector('input[type=number]');
    const quantity = parseInt(quantityInput.value);
    const price = parseFloat(quantityInput.parentNode.querySelector('.product-total').dataset.price);
    const productTotalElement = button.parentNode.parentNode.querySelector('.product-total');
    const productTotal = quantity * price;
    productTotalElement.textContent = productTotal.toFixed(2);
  }

  function updateTotal(productTotalElements, totalAmountElement, totalAmountWithVatElement) {
    let newTotal = 0;

    productTotalElements.forEach(element => {
      const productTotal = parseFloat(element.textContent);
      newTotal += productTotal;
    });

    totalAmountElement.textContent = newTotal.toFixed(2);
    totalAmountWithVatElement.textContent = newTotal.toFixed(2);
  }
</script>
